{"ast":null,"code":"var _jsxFileName = \"/Users/francanete/Treehouse/unit-11/techdegree-project-11/src/components/ImageList.js\",\n    _s = $RefreshSig$();\n\nimport Image from './Image';\nimport useFetch from './useFetch';\nimport apiKey from '../config';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = apiKey;\n\nconst ImageList = ({\n  searchTag\n}) => {\n  _s();\n\n  console.log(searchTag);\n  const {\n    id\n  } = useParams();\n  console.log(id);\n  const {\n    data: images,\n    isPending,\n    error\n  } = useFetch(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${searchTag}&per_page=24&format=json&nojsoncallback=1`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 18\n    }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: images && images.map(image => /*#__PURE__*/_jsxDEV(Image, {\n        url: `https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageList, \"fFiPK1ONcGCPvRHmRvsS+LOy/8o=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = ImageList;\nexport default ImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"sources":["/Users/francanete/Treehouse/unit-11/techdegree-project-11/src/components/ImageList.js"],"names":["Image","useFetch","apiKey","useParams","api","ImageList","searchTag","console","log","id","data","images","isPending","error","map","image","farm","server","secret"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,IAAIC,GAAG,GAAGF,MAAV;;AAGA,MAAMG,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AAEA,QAAM;AAACG,IAAAA;AAAD,MAAON,SAAS,EAAtB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AAEA,QAAM;AAAEC,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAAqCZ,QAAQ,CAAE,6EAA4EG,GAAI,SAAQE,SAAU,2CAApG,CAAnD;AACA,sBAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEIO,KAAK,iBAAI;AAAA,gBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,YAFb,EAGID,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHjB,eAIE;AAAA,gBACED,MAAM,IAAIA,MAAM,CAACG,GAAP,CAAYC,KAAD,iBACnB,QAAC,KAAD;AACE,QAAA,GAAG,EAAG,eAAcA,KAAK,CAACC,IAAK,qBAAoBD,KAAK,CAACE,MAAO,IAAGF,KAAK,CAACN,EAAG,IAAGM,KAAK,CAACG,MAAO;AAD9F,SAEOH,KAAK,CAACN,EAFb;AAAA;AAAA;AAAA;AAAA,cADQ;AADZ;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAgBD,CAvBD;;GAAMJ,S;UAGSF,S,EAG8BF,Q;;;KANvCI,S;AAyBN,eAAeA,SAAf","sourcesContent":["import Image from './Image'\nimport useFetch from './useFetch';\nimport apiKey from '../config';\nimport { useParams } from 'react-router-dom'\n\nlet api = apiKey;\n\n\nconst ImageList = ({ searchTag }) => {\n  console.log(searchTag);\n\n  const {id} = useParams()\n  console.log(id)\n\n  const { data: images, isPending, error } = useFetch(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${searchTag}&per_page=24&format=json&nojsoncallback=1`)\n  return ( \n    \n    <div className=\"photo-container\">\n      <h2>Results</h2>\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> }\n      <ul>\n      { images && images.map((image) => (\n          <Image  \n            url={`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`}\n            key={image.id}\n          />\n      ))}\n      </ul>   \n  </div>\n   );\n}\n \nexport default ImageList;"]},"metadata":{},"sourceType":"module"}