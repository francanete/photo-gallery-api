{"ast":null,"code":"var _jsxFileName = \"/Users/francanete/Treehouse/unit-11/techdegree-project-11/src/components/ImageList.js\",\n    _s = $RefreshSig$();\n\nimport Image from './Image';\nimport useFetch from './useFetch';\nimport apiKey from '../config';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = apiKey;\n\nconst ImageList = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    data: images,\n    isPending,\n    error\n  } = useFetch(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${id}&per_page=24&format=json&nojsoncallback=1`);\n  let results = true; // if (!isPending && images) {\n  //   results = true;\n  // } else if (!isPending) {\n  //   results = false;\n  // }\n\n  let content;\n\n  if (isPending) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }, this); // results = true;\n  } else if (!images.length) {\n    results = false;\n  } else if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this);\n  } else if (images) {\n    content = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: images && images.map(image => /*#__PURE__*/_jsxDEV(Image, {\n        url: `https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`\n      }, image.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"photo-container\",\n    children: [content, !results && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Oops! There are no results for that search.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ImageList, \"fFiPK1ONcGCPvRHmRvsS+LOy/8o=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = ImageList;\nexport default ImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"sources":["/Users/francanete/Treehouse/unit-11/techdegree-project-11/src/components/ImageList.js"],"names":["Image","useFetch","apiKey","useParams","api","ImageList","id","data","images","isPending","error","results","content","length","map","image","farm","server","secret"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,IAAIC,GAAG,GAAGF,MAAV;;AAGA,MAAMG,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAM;AAACC,IAAAA;AAAD,MAAOH,SAAS,EAAtB;AAEA,QAAM;AAAEI,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAAqCT,QAAQ,CAAE,6EAA4EG,GAAI,SAAQE,EAAG,2CAA7F,CAAnD;AAEA,MAAIK,OAAO,GAAG,IAAd,CANsB,CAOtB;AACA;AAEA;AACA;AACA;;AAGA,MAAIC,OAAJ;;AAEA,MAAIH,SAAJ,EAAe;AACbG,IAAAA,OAAO,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAV,CADa,CAEb;AACD,GAHD,MAGO,IAAI,CAACJ,MAAM,CAACK,MAAZ,EAAoB;AACzBF,IAAAA,OAAO,GAAG,KAAV;AACD,GAFM,MAEA,IAAID,KAAJ,EAAW;AAChBE,IAAAA,OAAO,gBACP;AAAA,gBAAOF;AAAP;AAAA;AAAA;AAAA;AAAA,YADA;AAED,GAHM,MAGA,IAAIF,MAAJ,EAAY;AACjBI,IAAAA,OAAO,gBACP;AAAA,gBACIJ,MAAM,IAAIA,MAAM,CAACM,GAAP,CAAYC,KAAD,iBACnB,QAAC,KAAD;AACE,QAAA,GAAG,EAAG,eAAcA,KAAK,CAACC,IAAK,qBAAoBD,KAAK,CAACE,MAAO,IAAGF,KAAK,CAACT,EAAG,IAAGS,KAAK,CAACG,MAAO;AAD9F,SAEOH,KAAK,CAACT,EAFb;AAAA;AAAA;AAAA;AAAA,cADQ;AADd;AAAA;AAAA;AAAA;AAAA,YADA;AASD;;AAED,sBAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,eACIM,OADJ,EAEI,CAACD,OAAD,iBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAOD,CA5CD;;GAAMN,S;UAESF,S,EAE8BF,Q;;;KAJvCI,S;AA8CN,eAAeA,SAAf","sourcesContent":["import Image from './Image'\nimport useFetch from './useFetch';\nimport apiKey from '../config';\nimport { useParams } from 'react-router-dom'\n\nlet api = apiKey;\n\n\nconst ImageList = () => {\n\n  const {id} = useParams()\n\n  const { data: images, isPending, error } = useFetch(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${id}&per_page=24&format=json&nojsoncallback=1`)\n  \n  let results = true;\n  // if (!isPending && images) {\n  //   results = true;\n    \n  // } else if (!isPending) {\n  //   results = false;\n  // }\n\n\n  let content;\n\n  if (isPending) {\n    content = <div>Loading...</div>\n    // results = true;\n  } else if (!images.length) {\n    results = false;\n  } else if (error) {\n    content =\n    <div>{ error }</div>\n  } else if (images) {\n    content=\n    <ul>\n      { images && images.map((image) => (\n          <Image  \n            url={`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`}\n            key={image.id}\n          />\n      ))}\n      </ul>\n  } \n\n  return (\n    \n    <div className=\"photo-container\">\n      { content }\n      { !results && <div>Oops! There are no results for that search.</div> }\n    </div>\n   );\n}\n \nexport default ImageList;"]},"metadata":{},"sourceType":"module"}