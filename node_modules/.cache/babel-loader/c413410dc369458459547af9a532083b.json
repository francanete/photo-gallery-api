{"ast":null,"code":"var _jsxFileName = \"/Users/francanete/Treehouse/unit-11/techdegree-project-11/src/components/ImageList.js\",\n    _s = $RefreshSig$();\n\nimport Image from './Image';\nimport useFetch from './useFetch';\nimport apiKey from '../config';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet api = apiKey;\n\nconst ImageList = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const {\n    data: images,\n    isPending,\n    setIsPending,\n    error\n  } = useFetch(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${id}&per_page=24&format=json&nojsoncallback=1`);\n  return (\n    /*#__PURE__*/\n    // if ()\n    _jsxDEV(\"div\", {\n      className: \"photo-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 18\n      }, this), isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: images && images.map(image => /*#__PURE__*/_jsxDEV(Image, {\n          url: `https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`\n        }, image.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(ImageList, \"KifSZFVKU41FuOgjTT+HFZIDyEQ=\", false, function () {\n  return [useParams, useFetch];\n});\n\n_c = ImageList;\nexport default ImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageList\");","map":{"version":3,"sources":["/Users/francanete/Treehouse/unit-11/techdegree-project-11/src/components/ImageList.js"],"names":["Image","useFetch","apiKey","useParams","api","ImageList","id","data","images","isPending","setIsPending","error","map","image","farm","server","secret"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,IAAIC,GAAG,GAAGF,MAAV;;AAGA,MAAMG,SAAS,GAAG,MAAM;AAAA;;AAEtB,QAAM;AAACC,IAAAA;AAAD,MAAOH,SAAS,EAAtB;AAEA,QAAM;AAAEI,IAAAA,IAAI,EAAEC,MAAR;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA,YAA3B;AAAyCC,IAAAA;AAAzC,MAAmDV,QAAQ,CAAE,6EAA4EG,GAAI,SAAQE,EAAG,2CAA7F,CAAjE;AAEA;AAAA;AACE;AACA;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEIK,KAAK,iBAAI;AAAA,kBAAOA;AAAP;AAAA;AAAA;AAAA;AAAA,cAFb,EAGIF,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHjB,eAIE;AAAA,kBACED,MAAM,IAAIA,MAAM,CAACI,GAAP,CAAYC,KAAD,iBACnB,QAAC,KAAD;AACE,UAAA,GAAG,EAAG,eAAcA,KAAK,CAACC,IAAK,qBAAoBD,KAAK,CAACE,MAAO,IAAGF,KAAK,CAACP,EAAG,IAAGO,KAAK,CAACG,MAAO;AAD9F,WAEOH,KAAK,CAACP,EAFb;AAAA;AAAA;AAAA;AAAA,gBADQ;AADZ;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAgBD,CAtBD;;GAAMD,S;UAESF,S,EAE4CF,Q;;;KAJrDI,S;AAwBN,eAAeA,SAAf","sourcesContent":["import Image from './Image'\nimport useFetch from './useFetch';\nimport apiKey from '../config';\nimport { useParams } from 'react-router-dom'\n\nlet api = apiKey;\n\n\nconst ImageList = () => {\n\n  const {id} = useParams()\n\n  const { data: images, isPending, setIsPending, error } = useFetch(`https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${api}&tags=${id}&per_page=24&format=json&nojsoncallback=1`)\n  \n  return (\n    // if ()\n    <div className=\"photo-container\">\n      <h2>Results</h2>\n      { error && <div>{ error }</div> }\n      { isPending && <div>Loading...</div> }\n      <ul>\n      { images && images.map((image) => (\n          <Image  \n            url={`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`}\n            key={image.id}\n          />\n      ))}\n      </ul>\n    </div>\n   );\n}\n \nexport default ImageList;"]},"metadata":{},"sourceType":"module"}